<map id="Node" name="Node">
<area shape="rect" id="node1" title="Every node in the AST has to implement this abstract class." alt="" coords="5,169,61,196"/>
<area shape="rect" id="node2" href="$classExpression.html" title="Represent the expression, for example, let a = 3. a is the expression and also, 3 is the expression...." alt="" coords="109,107,203,133"/>
<area shape="rect" id="node7" href="$classProgram.html" title="This class is the entry point of the AST. it composes a consecutive statements." alt="" coords="117,169,195,196"/>
<area shape="rect" id="node8" href="$classStatement.html" title="Represent the statements, for example, let a = 3; is a statement. It should inherit from Node." alt="" coords="111,245,201,272"/>
<area shape="rect" id="node3" href="$classIdentifier.html" title="Identifier class. It is an expression. It is inherited from Expression class." alt="" coords="291,5,371,32"/>
<area shape="rect" id="node4" href="$classInfixExpression.html" title="InfixExpression is an expression which represents &lt;expression&gt;&lt;infix operator&gt;&lt;expression&gt;" alt="" coords="271,56,392,83"/>
<area shape="rect" id="node5" href="$classIntegerLiteral.html" title="IntegerLiteral is an expression which represents the 5." alt="" coords="277,107,386,133"/>
<area shape="rect" id="node6" href="$classPrefixExpression.html" title="PrefixExpression is an expression which represents &lt;prefix operator&gt;&lt;expression&gt;;" alt="" coords="266,157,397,184"/>
<area shape="rect" id="node9" href="$classExpressionStatement.html" title="Expression could also be a statement. for example: x + 10." alt="" coords="251,208,412,235"/>
<area shape="rect" id="node10" href="$classLetStatement.html" title="LetStatement represents let statement, for example let a = 3." alt="" coords="276,259,387,285"/>
<area shape="rect" id="node11" href="$classReturnStatement.html" title="ReturnStatement represents return statement for example, return 3" alt="" coords="265,309,398,336"/>
</map>
