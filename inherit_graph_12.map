<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classNode.html" title="Every node in the AST has to implement this abstract class." alt="" coords="5,461,61,488"/>
<area shape="rect" id="node2" href="$classExpression.html" title="Represent the expression, for example, let a = 3. a is the expression and also, 3 is the expression...." alt="" coords="109,284,203,311"/>
<area shape="rect" id="node14" href="$classProgram.html" title="This class is the entry point of the AST. it composes a consecutive statements." alt="" coords="117,461,195,488"/>
<area shape="rect" id="node15" href="$classStatement.html" title="Represent the statements, for example, let a = 3; is a statement. It should inherit from Node." alt="" coords="111,613,201,640"/>
<area shape="rect" id="node3" href="$classArrayLiteral.html" title="Represent array literal such as [1, 2, 3 + 3, fn(x) {x}, add(2, 2)]." alt="" coords="282,5,381,32"/>
<area shape="rect" id="node4" href="$classBooleanExpression.html" title="represent the boolean value" alt="" coords="258,56,405,83"/>
<area shape="rect" id="node5" href="$classCallExpression.html" title="This class represents the call for example add(a + b, 5, 4)" alt="" coords="272,107,391,133"/>
<area shape="rect" id="node6" href="$classFunctionLiteral.html" title="This class represents the functional literal." alt="" coords="272,157,391,184"/>
<area shape="rect" id="node7" href="$classIdentifier.html" title="Identifier class. It is an expression. It is inherited from Expression class." alt="" coords="291,208,371,235"/>
<area shape="rect" id="node8" href="$classIfExpression.html" title="IfExpression contains three important aspects:" alt="" coords="280,259,383,285"/>
<area shape="rect" id="node9" href="$classIndexExpression.html" title="Represent the index operation a[3]. &lt;expression&gt;[expression]." alt="" coords="267,309,396,336"/>
<area shape="rect" id="node10" href="$classInfixExpression.html" title="InfixExpression is an expression which represents &lt;expression&gt;&lt;infix operator&gt;&lt;expression&gt;" alt="" coords="271,360,392,387"/>
<area shape="rect" id="node11" href="$classIntegerLiteral.html" title="IntegerLiteral is an expression which represents the 5." alt="" coords="277,411,386,437"/>
<area shape="rect" id="node12" href="$classPrefixExpression.html" title="PrefixExpression is an expression which represents &lt;prefix operator&gt;&lt;expression&gt;;" alt="" coords="266,461,397,488"/>
<area shape="rect" id="node13" href="$classStringLiteral.html" title="StringLiteral represents string." alt="" coords="281,512,382,539"/>
<area shape="rect" id="node16" href="$classBlockStatement.html" title="BlockStatement is a block ({}) which contains many different statements." alt="" coords="268,563,395,589"/>
<area shape="rect" id="node17" href="$classExpressionStatement.html" title="Expression could also be a statement. for example: x + 10." alt="" coords="251,613,412,640"/>
<area shape="rect" id="node18" href="$classLetStatement.html" title="LetStatement represents let statement, for example let a = 3." alt="" coords="276,664,387,691"/>
<area shape="rect" id="node19" href="$classReturnStatement.html" title="ReturnStatement represents return statement for example, return 3" alt="" coords="265,715,398,741"/>
</map>
